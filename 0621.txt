
0621
컴퓨터시스템 

컴퓨터시스템 - 하드웨어,소프트웨어

하드웨어 - 중앙처리장치, 저장 장치, 입출력장치 등
중앙처리장치 - CPU = 산술논리 연산장치, 제어장치, 레지스터로 구성
기억장치 - 메모리, 주기억장치(램, 롬 등 일시적 저장 장치) 보조기억장치 (하드디스크 등 영구적 저장)
입출력장치 - 입력장치 (키보드 마우스) 출력장치 (프린터, 모니터)

소프트웨어 - 주변 기기등의 하드웨어를 작동시키기위한 모듈, 펌웨어, 운영체제, 응용 소프트웨어
시스템 소프트웨어 - 컴퓨터시스템의 효율적인 운영과 제어 담당
응용 소프트웨어 - 응용분야의 업무를 처리하기 위해사용 (문서, 자료관리)
--

중앙처리장치 구성 (CPU)

레지스터 
1.메모리 주소 레지스터(읽기와 쓰기 연산을 수행할 주기억장치의 주소 저장
2.프로그램카운터 (다음에 수행할 명령을 저장)
3.스택포인터 (스택의 최상위 주소 저장)
4.인덱스 레지스터 (인덱스 주소지정방식에서 인덱스 저장)   
5.메모리 버퍼 레지스터 (주기억장치에서 읽어온 데이터나 주기억장치에 저장할 데이터 임시저장)
6.프로그램 상태 레지스터 ( CPU의 현재상태정보 저장)


램 - 휘발성메모리, 임의 접근 기억장치
D램 - 가격저렴, 전력소비 낮음, 대용량메모리에 적합
S램 - 전원 공급시 정보 계속 유지, D램보다 회로 복잡, 캐시메모리에 주로 사용
           
----

시스템운영체제 (윈도우, 리눅스 등 컴파일러)
응용 운영체제 (엑셀, 한글 등)

펌웨어는 하드웨어처럼 사용하는 것 

-----

운영체제 

역할 - 인터페이스 제공, 컴퓨터 자원을 활용하기위해 조정 관리, 응용프로그램 제어, 입출력 제어 및 데이터관리
다중 프로그래밍
여러 프로세스들을 주기억 장치에 두고 병행적으로 동시에 처리하는 방식을 말합니다.
해당 작업이 기다리는 상태가 되면 중앙 처리 장치를 다른 작업이나 프로그램에 할당하여 교환하여 쉬는 시간이 없게 됩니다.
다중 처리 시스템
공유 기억 장치를 통해 하나로 연결된 여러 개의 프로세서가 처리하는 방식을 말합니다.
하나의 시스템에 여러 개의 프로세서를 두는 것이 가능해졌기 때문입니다.


------

프로세스와 스레드

프로그램에 대한 인스턴스

스레드
한 프로세스 내에서 동작되는 여러 실행의 흐름
하나의 프로세스 하나의 스레드, - 메인스레드
프로세스는 여러개의 스레드를 가질수있다


프로세스 - 실행중인 프로그램, 비동기적 행위, 실행 중인 프로시저 등등 
많은 정의가 있다.
운영체제가 프로세서 스케쥴러를 이용하여 상태 변화를 관리한다
작업 스케쥴러 - 실행할 작업을 선정
프로세스 생성 - 준비 - 디스패치를 거쳐서 실행됨 - 시간이 종료되면 다시 준비상태 - 완료되면 종료
입출력을 대기할땐 대기 상태로 바뀜
프로세스 스스로 하는 것은 대기뿐, 나머지는 외부조건으로 발생

스레드 - 프로세스의 특성인 자원과 제어에서 제어만 분리한 실행 단위
프로세스 하나는 스레드 한 개 이상으로 나눌 수 있음

프로세스 하나에 포함된 스레드들은 공동의 목적 달성을 위해 병렬 수행.
프로세스가 하나인 서로 다른 프로세서에서 프로그램의 다른 부분을 동시에 실행함

스레드의 장점
시스템의 직관적으로 알 수 있는 처리율이 향상됩니다.
시스템의 자원 소모가 줄어듭니다.
프로그램의 응답 시간이 단축됩니다.
프로세스 간 통신 방법에 비해 스레드 간의 통신 방법이 훨씬 간단합니다.

-------
유닉스 - 대화형 시스템, 다중 사용자 시스템, 다중 작업 시스템

유닉스 - 높은 이식성과 확장성 제공, 계층적 파일 시스템 구조
종류 - 사용자 프로세스, 커널 프로세스, 데몬 프로세스

유닉스 프로세스의 스케줄링
커널이 프로세스 여러 개를 스케줄링하여 동시 실행하는 것처럼 보이지만, 프로세스는 독립적인 명령 순서에 따라 실행하며 다른 프로세스로 분기하지 않습니다.
시분할 시스템에서 커널은 각 프로세스에 시간 할당량이라는 시간 동안 프로세서 할당시간 할당량을 초과하면 그 프로세스를 중단시키고 다른 프로세스 스케줄링 합니다.
프로세스들은 프로세서 위주의 작업들을 수행하는 순환 할당 알고리즘과 같은 우선순위 알고리즘으로 프로세서의 시간 일부를 할당 받습니다.
유닉스 스케줄러는 다단계 피드백이 있는 순환 할당 스케줄러에 속합니다.
커널이 프로세스에 프로세서 시간 할당, 프로세스가 할당된 시간을 초과하면 중단한 후 여러 우선순위를 갖는 큐 중에서 우선순위가 가장 높은 것을 하나 선택합니다.


리눅스 - 누구나 배포 가능~
기능이 거의 비슷함~ 리눅스는 유닉스에 비해 배포가 자유로움
------


가상머신 - 설치되어있는 운영체제에 가상의 머신을 생성한 후 여기에 다른 운영체제를 설치할 수 있도록
해주는 응용프로그램

VMware가 가장 많이 사용
가상머신 유닉스가 널리 사용된 이유 - 이식성, 유틸리티 개발이 쉬움, 다양한 하드웨어와 호환성
유닉스 상표 - 솔라리스, AIX, Mac OS X, 등


우분투 리눅스와 페도라 리눅스의 특징 비교
페도라
레드햇에서 후원하는 페도라 프로젝트에서 개발한 RPM기반의 리눅스 배포판입니다.
개인이나 기업 등 다양한 환경에서 사용될 수 있도록 만들어진 리눅스입니다.
다른 리눅스 배포판에 비해 6개월 간격으로 새로운 버전이 배포되어 상대적으로 짧은 교환주기를 가짐니다.
각 버전마다 13개월만 지원하므로 기간이 매우 짧습니다.
우분투
데스크톱에서 리눅스를 쉽게 사용할 수 있도록 만들어진 리눅스 배포판입니다.
데비안/GNU/리눅스에 기초한 리눅스로 고유의 데스크톱 환경인 유니티를 사용합니다.
캐노니컬이라는 회사의 지원아래 신버전 출시되었으며 사용자 편의성을 강조하였습니다.

----

리눅스 기본명령
프롬프트 다음에 명령을 입력하여 리눅스 사용
단어지우기 = 컨트롤 W
행지우기 = 컨트롤 U

명령 형식 = 명령[옵션][인자]
명령의 종류로 data, man, ls, cp 등 다양함

옵션 = 명령의 세부기능 선택, -로 시작하여 영문 소문자나 대문자로 구성
인자 = 명령으로 전달되는 값, 주로 파일명이나 디렉토리명이 사용

date = 날짜확인
clear = 현재 화면 지우는 명령
man = 명령에 대한 설명 ex) man clear
password = 사용자 패스워드
exit = 터미널 종료

디렉토리는 계층적으로 구성
모든 디렉토리의 출발점은 루트다. 빗금 / 으로 표시

루트 디렉토리를 제외한 모든 디렉토리는 부모 디렉토리가 있음
절대 경로명 - 항상 루트 디렉토리로 시작 /

빗금을 파일 명으로 설정할 수 없음

현재 디렉토리 확인하기 - pwd
기능 : 현재 위치 확인, 현재 디렉토리의 절대 경로명 나타냄

지정한 디렉토리 이동 - cd
홈디렉토리 이동 - cd/home/user1
파일 존재확인 - ls.bash

디렉토리 만들기 - mkdir
mkdir[옵션][디렉토리]
ex) mkdir temp

중간 디렉토리 자동으로 만들기 = -p 옵션
디렉토리 삭제 rmdir
모든 파일출력 = ls -a
a디렉토리 아래에 b,c 디렉토리를 동시에 만들기 = mkdir a/b a/c

리눅스의 네가지 파일
일반 파일: 데이터를 저장하는 데 주로 사용된다. 각종 텍스트 파일, 실행 파일, 이미지 파일 등 리눅스에서 사용하는 대부분의 파일은 일반 파일에 해당합니다.
디렉터리: 해당 디렉터리에 저장된 파일이나 하위 디렉터리에 대한 정보가 저장됩니다.
심벌릭 링크: 원본 파일에 대한 경로를 저장하고 있는 파일로 원본 파일을 대신하여 다른 이름으로 파일명을 지정한 것입니다.
장치 파일: 리눅스 시스템에 부착된 장치들을 관리하기 위한 특수 파일입니다.








