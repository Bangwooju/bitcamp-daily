0623

파일 시스템
파일과 디렉터리 집합을 구조적으로 관리하는 체계
파일은 inode로 관리됩니다.
디렉터리는 단순히 파일의 목록을 가지고 있는 파일일 뿐입니다.
특수 파일을 통해 장치에 접근할 수 있습니다.
디렉터리 계층 구조에서 보이는 모든 디렉터리와 파일을 하나의 파일 시스템으로 구성합니다.
디렉터리 계층 구조를 여러 파일 시스템으로 구분하여 구성합니다.
일부 파일 시스템에 문제가 생기더라도 다른 파일 시스템의 파일은 안전합니다.

----

파티션은 하나의 디스크를 독립된 영역을 구분하는 것으로 한 파티션에 문제가 생겼을 경우
디스크 전체를 사용하지 못하지만,
여러 개의 파티션으로 나눌 경우 디스크의 다른 파티션에는 영향을 주지 않으므로 
데이터 보호 차원의 장점이 있습니다.

파일 시스템은 이 파티션에서 파일과 디렉터리를 관리하기 위한 구조를 만드는 것임
파일 시스템 생성 명령: mkfs, mke2fs
디스크 마운트 및 LVM
디스크 마운트란 파일 시스템을 디렉터리 계층 구조에 마운트하는 것을 의미함
LVM은 독립적으로 구성된 디스크 파티션을 하나로 연결하여 한 파티션처럼 사용할 수 있도록 해줌

디스크 관리
파일 시스템별 디스크 사용량 확인하기: df
디렉터리나 사용자별 디스크 사용량 확인하기: du
파일 시스템 검사하기: fsck 명령
파일 시스템 복구하기: 백업 슈퍼 블록 이용
/dev/sdd1 파일 시스템의 정보 출력: dumpe2fs 명령
-----

슈퍼 데몬의 역할을 간단히 설명하고 독자형 데몬과 슈퍼 데몬에 의한 호출형의 차이

사용자가 네트워크 서비스를 요청하면 슈퍼 데몬이 이를 받아서 해당하는 서비스 데몬을 동작시키는 것입니다.
독자형의 경우는 시스템의 백그라운드에서 항상 동작하고 있으며, 슈퍼 데몬에 의한 동작 방식은 평소에는 
슈퍼 데몬만 동작하다가 서비스 요청이 오면 슈퍼 데몬이 해당 데몬을 동작시킵니다.

----
ch4 디렉터리의 아카이브 파일을 만드는 명령을 작성하고, 
이 파일을 gzip과 bzip2로 각각 압축한 다음 파일 크기를 비교해보세요.

일반적으로 bzip2로 압축한 것이 파일크기가 작습니다.
tar cvf ch4.tar ch4
tar cvzf ch4.tar.gz ch4
tar cvjf ch4.tar.bz2 ch4

우분투 패키지 설치
우분투는 패키지와 패키지에 대한 정보를 저장하고 있는 서버인 패키지 저장소라는 개념을 사용함
패키지 저장소에서는 패키지의 기능 추가나 보안 패치 등 지속적인 업그레이드를 집중적으로 관리함
우분투 패키지 설치 명령: apt-cache 명령, apt-get 명령, dpkg 명령, aptitude 명령
스냅 패키지 설치
우분투가 새로 도입한 패키지 형식으로 샌드박스 형태의 패키지임
패키지를 만들 때 프로그램이 사용하는 모든 라이브러리를 패키지 안에 포함함

파일 아카이브와 압축
파일을 묶어서 하나로 만든 것임
tar(tape archive) 명령은 원래 여러 파일이나 디렉터리를 묶어서 
마그네틱 테이프와 같은 이동식 저장 장치에 보관하기 위해 사용함
-----

사용자 계정 생성하기 : useradd
useradd[옵션][로그인ID]


useradd -m -d /home/user10
-u 3500 -G 1000 -s /bin/bash -c " ID-CREATE " -e 2018-12-31 -f 5 user10
-----

파일시스템에 계정별로 설정된 쿼터를 초과해서 파일을 저장하려고 한 것으로 
홈 디렉터리에서 불필요한 파일을 삭제하여 
빈 공간을 확보하거나 시스템 관리자에게 요청하여 쿼터를 조정해야 합니다.

사용자 정보 관리 명령
UID(RUID): 사용자가 로그인할 때 사용한 계정의 UID
EUID: 현재 명령을 수행하는 주체의 UID
실행 파일에 setuid가 설정되어 있는 경우
해당 실행 파일을 실행한 프로세스의 UID는 사용자 계정의 UID가 아니라 실행 파일 소유자의 UID임
이때 실행 파일 소유자의 UID가 EUID임

디스크 쿼터 관리
하드디스크에서 사용자가 사용할 수 있는 파일의 전체 용량을 설정하는 방법을 말함
사용자가 사용할 수 있는 총 파일 수로 설정하는 방법임
하드 리미트: 사용자가 절대로 넘을 수 없는 최대치를 명시한 값
소프트 리미트: 일정 시간 내에는 넘을 수 있는 한계 값
----
TCP/IP프로토콜
-인터넷 계층이라고도함
-네트워크의 패킷 전송을 제어

IP주소
총 32비트 중 몇 비트를 네트워크로 사용하고 호스트 부분으로 사용하는지에 따라 구분
-C클래스
앞의 3바이트가 네트워크 뒤의 1바이트가 호스트

네트워크주소
www.가 호스트 나머지가 이름

포트번호
각 서비스를 구분해주는 것이 포트번호, 전송계층에서 사용하는 번호임

TCP/IP 주소의 구조
물리주소, 인터넷 주소, 포트주소

C 클래스 IP에서 넷마스크가 255.255.255.0이 아닌 255.255.255.128일 경우 
네트워크를 어떻게 구성한 것인지 간단히 설명해보세요.
-하나의 네트워크를 두 개의 서브넷으로 나누어 구성한 것입니다.
마지막 바이트의 값이 128이므로 이를 2진수로 표현하면 10000000이므로 
첫 번째 값이 0인 네트워크와 1인 네트워크로 구분한 것입니다.
예를 들어 192.123.24.0 C클래스 네트워크에 대해서 서브넷마스크가 
255.255.255.0의 경우 마지막 8비트가 호스트로 사용되므로 
할당 가능한 호스트 수는 2^8 -2 =254이지만 서브넷마스크가 255.255.255.128은 
마지막 7비트만이 호스트로 사용가능하기 때문에 
192.123.24.128 서브네트워크와 192.123.24.0 서브네트워크에 대해서 
할당가능한 호스트 수는 2^7-2=126입니다.

네트워크의 설정
네트워크 관리자와 작업하기
네트워크 설정 정보를 연결 프로파일(connection profile)에 저장함
사용자는 네트워크 관리자를 직접 제어하지 않고 명령 기반 도구나 GUI 기반 도구를 사용함
nmcli는 네트워크 관리자를 사용하는 명령 기반 도구임
gnome의 [설정]-[네트워크]나 nm-connectioneditor는 GUI 기반 도구임
----

특정 포트(예: 80)로 주고받는 패킷 15개를 test.out으로 저장하는 명령과 
이 파일의 내용을 확인하는 명령은 각각 무엇인지 적어보세요.

-tcpdump -c 15 tcp port 80 -w test.out
tcpdump -r test.out


